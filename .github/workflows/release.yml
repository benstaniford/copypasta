name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi
          # Extract numeric version (remove 'v' prefix if present)
          NUMERIC_VERSION=$(echo "${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version || github.ref_name }}" | sed 's/^v//')
          echo "NUMERIC_VERSION=$NUMERIC_VERSION" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            nerwander/copypasta:${{ steps.version.outputs.VERSION }}
            nerwander/copypasta:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create Docker artifact for release
        run: |
          docker pull nerwander/copypasta:${{ steps.version.outputs.VERSION }}
          docker save nerwander/copypasta:${{ steps.version.outputs.VERSION }} | gzip > copypasta-docker-${{ steps.version.outputs.VERSION }}.tar.gz

      - name: Upload Docker artifact
        uses: actions/upload-artifact@v4
        with:
          name: copypasta-docker
          path: copypasta-docker-${{ steps.version.outputs.VERSION }}.tar.gz


  create-release:
    needs: [build-docker]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Generate release notes
        id: release_notes
        run: |
          cat > release_notes.md << 'EOF'
          # CopyPasta ${{ steps.version.outputs.VERSION }}
          
          ## What's New
          
          Cross-device clipboard sharing application built with Flask.
          
          ## Downloads
          
          ### Docker
          - **copypasta-docker-${{ steps.version.outputs.VERSION }}.tar.gz** - Docker image
          
          ## Features
          
          - 🌐 **Web Interface**: Access clipboard from any device with a web browser
          - 📝 **Text Support**: Share text content across devices
          - 🖼️ **Image Support**: Copy and paste images across devices
          - 🔒 **Authentication**: Secure login system
          - 🐳 **Docker Deployment**: Easy server setup with Docker
          - 💾 **SQLite Database**: Persistent clipboard storage
          
          ## Installation
          
          ### Server (Docker)
          
          **Option 1: Using Docker Hub (Recommended)**
          ```bash
          # Pull and run from Docker Hub
          docker run -d -p 5000:5000 --name copypasta nerwander/copypasta:${{ steps.version.outputs.VERSION }}
          
          # Or use docker-compose
          docker compose up -d
          ```
          
          **Option 2: Using Downloaded Image**
          ```bash
          # Load the Docker image
          gunzip -c copypasta-docker-${{ steps.version.outputs.VERSION }}.tar.gz | docker load
          
          # Run the container
          docker run -d -p 5000:5000 --name copypasta nerwander/copypasta:${{ steps.version.outputs.VERSION }}
          ```
          
          ## System Requirements
          
          - **Server**: Docker or Python 3.11+
          
          EOF

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          release_name: CopyPasta ${{ steps.version.outputs.VERSION }}
          body_path: release_notes.md
          draft: false
          prerelease: false


      - name: Upload Docker Image
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/copypasta-docker/copypasta-docker-${{ steps.version.outputs.VERSION }}.tar.gz
          asset_name: copypasta-docker-${{ steps.version.outputs.VERSION }}.tar.gz
          asset_content_type: application/gzip